//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace People_Anyplace.com.borland.ww6 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IMapQuestbinding", Namespace="http://tempuri.org/")]
    public class IMapQuestservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public IMapQuestservice() {
            this.Url = "http://ww6.borland.com/webservices/MapQuest/MapQuest.exe/soap/IMapQuest";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:MapQuestIntf-IMapQuest#GetDirections", RequestNamespace="urn:MapQuestIntf-IMapQuest", ResponseNamespace="urn:MapQuestIntf-IMapQuest")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDirections(string FromAddress, string FromCity, string FromState, string FromCountry, string ToAddress, string ToCity, string ToState, string ToCountry) {
            object[] results = this.Invoke("GetDirections", new object[] {
                        FromAddress,
                        FromCity,
                        FromState,
                        FromCountry,
                        ToAddress,
                        ToCity,
                        ToState,
                        ToCountry});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirections(string FromAddress, string FromCity, string FromState, string FromCountry, string ToAddress, string ToCity, string ToState, string ToCountry, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirections", new object[] {
                        FromAddress,
                        FromCity,
                        FromState,
                        FromCountry,
                        ToAddress,
                        ToCity,
                        ToState,
                        ToCountry}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDirections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
