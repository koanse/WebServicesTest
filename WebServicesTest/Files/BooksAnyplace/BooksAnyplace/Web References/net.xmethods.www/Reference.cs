//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.42.
// 
namespace BooksAnyplace.net.xmethods.www {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BNQuoteBinding", Namespace="http://www.xmethods.net/sd/BNQuoteService.wsdl")]
    public class BNQuoteService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public BNQuoteService() {
            this.Url = "http://services.xmethods.net:80/soap/servlet/rpcrouter";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:xmethods-BNPriceCheck", ResponseNamespace="urn:xmethods-BNPriceCheck")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public float getPrice(string isbn) {
            object[] results = this.Invoke("getPrice", new object[] {
                        isbn});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPrice(string isbn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPrice", new object[] {
                        isbn}, callback, asyncState);
        }
        
        /// <remarks/>
        public float EndgetPrice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((float)(results[0]));
        }
    }
}
